generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
  name     String
}

model Category {
  id              String           @id @default(uuid())
  name            String
  sellingType     String           @default("unit")
  packageSizes    String?
  products        Product[]
  displaySections DisplaySection[]
  flavors         Flavor[]
}

model Flavor {
  id         String    @id @default(uuid())
  name       String
  imageUrl   String?
  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model Product {
  id          String     @id @default(uuid())
  name        String
  description String
  price       Float
  discount    Float?
  imageUrl    String
  active      Boolean    @default(true)
  categories  Category[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now()) @updatedAt
}

model DisplaySection {
  id         String    @id @default(uuid())
  title      String
  type       String // "category", "custom", "discounted", "new_arrivals", "best_sellers"
  active     Boolean   @default(true)
  categoryId String?
  productIds String? // Para "custom", armazenado como JSON
  order      Int
  startDate  DateTime?
  endDate    DateTime?
  tags       String? // Tags para campanhas, armazenadas como JSON
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@map("display_sections")
}
